import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";

import { FEATURED_DESTINATIONS } from "../utils/constants";

const Destinations = () => {
  const [destinations, setDestinations] = useState([]);
  const [filteredDestinations, setFilteredDestinations] = useState([]);
  const [selectedRegion, setSelectedRegion] = useState("all");
  const [searchTerm, setSearchTerm] = useState("");
  const [isLoading, setIsLoading] = useState(true);

  const regions = {
    all: "T·∫•t c·∫£",
    "B·∫Øc B·ªô": "B·∫Øc B·ªô",
    "Trung B·ªô": "Trung B·ªô",
    "Nam B·ªô": "Nam B·ªô",
  };

  useEffect(() => {
    const destinationDetails = {
      "H√† N·ªôi": {
        description: "Th·ªß ƒë√¥ ngh√¨n nƒÉm vƒÉn hi·∫øn v·ªõi ph·ªë c·ªï quy·∫øn r≈©",
        highlights: ["Ph·ªë C·ªï", "Ho√†n Ki·∫øm", "VƒÉn Mi·∫øu", "LƒÉng B√°c"],
        bestTime: "Th√°ng 10-12, 3-4",
        specialties: ["Ph·ªü", "B√∫n ch·∫£", "Ch·∫£ c√°"],
        imageId: "1583417319070-4a69db38a482",
      },
      "H·ªì Ch√≠ Minh": {
        description: "Th√†nh ph·ªë nƒÉng ƒë·ªông nh·∫•t Vi·ªát Nam",
        highlights: ["B·∫øn Th√†nh", "Nh√† th·ªù ƒê·ª©c B√†", "Dinh ƒê·ªôc L·∫≠p", "Ph·ªë T√¢y"],
        bestTime: "Th√°ng 12-4",
        specialties: ["B√°nh m√¨", "C∆°m t·∫•m", "H·ªß ti·∫øu"],
        imageId: "1552465011-b4e21bf6e79a",
      },
      "ƒê√† N·∫µng": {
        description: "Th√†nh ph·ªë bi·ªÉn hi·ªán ƒë·∫°i v·ªõi nh·ªØng c√¢y c·∫ßu n·ªïi ti·∫øng",
        highlights: ["C·∫ßu R·ªìng", "B√† N√† Hills", "M·ªπ Kh√™", "Ng≈© H√†nh S∆°n"],
        bestTime: "Th√°ng 2-8",
        specialties: ["M√¨ Qu·∫£ng", "B√°nh tr√°ng cu·ªën th·ªãt heo", "C∆°m g√†"],
        imageId: "1588392382425-d9181b0bd8c0",
      },
      "H·ªôi An": {
        description: "Ph·ªë c·ªï l√£ng m·∫°n b√™n s√¥ng Thu B·ªìn",
        highlights: ["Ph·ªë C·ªï", "Ch√πa C·∫ßu", "L√†ng rau Tr√† Qu·∫ø", "Ph·ªë ƒë√®n l·ªìng"],
        bestTime: "Th√°ng 2-8",
        specialties: ["Cao l·∫ßu", "White Rose", "B√°nh m√¨ Ph∆∞·ª£ng"],
        imageId: "1551632436-cbf8dd35adfa",
      },
      Sapa: {
        description: "Th·ªã tr·∫•n s∆∞∆°ng m√π v·ªõi ru·ªông b·∫≠c thang tuy·ªát ƒë·∫πp",
        highlights: ["Ru·ªông b·∫≠c thang", "Fansipan", "B·∫£n C√°t C√°t", "Ch·ª£ t√¨nh"],
        bestTime: "Th√°ng 3-5, 9-11",
        specialties: ["Th·ªãt l·ª£n c·∫Øp n√°ch", "C√° t·∫ßm", "R∆∞·ª£u t√°o m√®o"],
        imageId: "1528127269322-539801943592",
      },
      "Ph√∫ Qu·ªëc": {
        description: "ƒê·∫£o ng·ªçc v·ªõi b√£i bi·ªÉn trong xanh v√† h·∫£i s·∫£n t∆∞∆°i ngon",
        highlights: ["B√£i Sao", "C√°p treo H√≤n Th∆°m", "Ch·ª£ ƒë√™m", "Safari"],
        bestTime: "Th√°ng 11-3",
        specialties: ["H·∫£i s·∫£n n∆∞·ªõng", "N∆∞·ªõc m·∫Øm", "Sim r∆∞·ª£u"],
        imageId: "1578662996442-48f60103fc96",
      },
      "Nha Trang": {
        description: "Th√†nh ph·ªë bi·ªÉn v·ªõi nh·ªØng ho·∫°t ƒë·ªông th·ªÉ thao n∆∞·ªõc h·∫•p d·∫´n",
        highlights: ["B√£i bi·ªÉn Nha Trang", "Vinpearl", "Th√°p B√†", "H√≤n Mun"],
        bestTime: "Th√°ng 1-8",
        specialties: ["Nem n∆∞·ªõng", "B√°nh cƒÉn", "Y·∫øn s√†o"],
        imageId: "1571218447-b7ba11f10515",
      },
      "ƒê√† L·∫°t": {
        description: "Th√†nh ph·ªë ng√†n hoa v·ªõi kh√≠ h·∫≠u m√°t m·∫ª quanh nƒÉm",
        highlights: [
          "H·ªì Xu√¢n H∆∞∆°ng",
          "Valley of Love",
          "Crazy House",
          "Langbiang",
        ],
        bestTime: "Th√°ng 12-3",
        specialties: ["B√°nh tr√°ng n∆∞·ªõng", "Nem n∆∞·ªõng", "S·ªØa ƒë·∫≠u n√†nh"],
        imageId: "1559827260-dc66d52bef19",
      },
    };

    // Simulate API loading
    setTimeout(() => {
      const enhancedDestinations = FEATURED_DESTINATIONS.map((name, index) => ({
        id: index + 1,
        name,
        slug: name.toLowerCase().replace(/\s+/g, "-"),
        region:
          index < 2
            ? "B·∫Øc B·ªô"
            : index < 4
              ? "Trung B·ªô"
              : index < 6
                ? "Nam B·ªô"
                : "Trung B·ªô",
        ...destinationDetails[name],
      }));

      setDestinations(enhancedDestinations);
      setFilteredDestinations(enhancedDestinations);
      setIsLoading(false);
    }, 800);
  }, []);

  useEffect(() => {
    let filtered = destinations;

    // Filter by region
    if (selectedRegion !== "all") {
      filtered = filtered.filter((dest) => dest.region === selectedRegion);
    }

    // Filter by search term
    if (searchTerm) {
      filtered = filtered.filter(
        (dest) =>
          dest.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
          dest.description.toLowerCase().includes(searchTerm.toLowerCase()),
      );
    }

    setFilteredDestinations(filtered);
  }, [destinations, selectedRegion, searchTerm]);

  if (isLoading) {
    return (
      <div className="loading-container">
        <div className="loading-spinner"></div>
        <p
          style={{
            marginTop: "var(--space-lg)",
            color: "var(--color-neutral-600)",
          }}
        >
          ƒêang t·∫£i ƒëi·ªÉm ƒë·∫øn...
        </p>
      </div>
    );
  }

  return (
    <div className="destinations-page">
      {/* Hero Section */}
      <section className="destinations-hero">
        <div className="destinations-hero-overlay"></div>
        <div className="container">
          <div className="destinations-hero-content">
            <h1 className="destinations-hero-title">
              <span className="title-line">Kh√°m ph√°</span>
              <span className="title-line gradient-text">Vi·ªát Nam</span>
              <span className="title-line">c√πng ch√∫ng t√¥i</span>
            </h1>
            <p className="destinations-hero-description">
              T·ª´ n√∫i r·ª´ng T√¢y B·∫Øc ƒë·∫øn bi·ªÉn c·∫£ Nam Trung B·ªô, m·ªói ƒëi·ªÉm ƒë·∫øn l√† m·ªôt
              c√¢u chuy·ªán ƒë·ªôc ƒë√°o ch·ªù b·∫°n kh√°m ph√° qua g√≥c nh√¨n c·ªßa ng∆∞·ªùi d√¢n ƒë·ªãa
              ph∆∞∆°ng.
            </p>
            <div className="hero-stats">
              <div className="stat-item">
                <span className="stat-number">8+</span>
                <span
                  className="stat-label"
                  style={{
                    color: "rgba(255, 255, 255, 0.95)",
                    fontWeight: "600",
                    textShadow: "0 1px 2px rgba(0, 0, 0, 0.3)",
                  }}
                >
                  ƒêi·ªÉm ƒë·∫øn
                </span>
              </div>
              <div className="stat-item">
                <span className="stat-number">100+</span>
                <span
                  className="stat-label"
                  style={{
                    color: "rgba(255, 255, 255, 0.95)",
                    fontWeight: "600",
                    textShadow: "0 1px 2px rgba(0, 0, 0, 0.3)",
                  }}
                >
                  ƒê·ªãa ƒëi·ªÉm
                </span>
              </div>
              <div className="stat-item">
                <span className="stat-number">1000+</span>
                <span
                  className="stat-label"
                  style={{
                    color: "rgba(255, 255, 255, 0.95)",
                    fontWeight: "600",
                    textShadow: "0 1px 2px rgba(0, 0, 0, 0.3)",
                  }}
                >
                  Tr·∫£i nghi·ªám
                </span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Filter Section */}
      <section className="destinations-filter">
        <div className="container">
          <div className="filter-container">
            <div className="search-section">
              <div className="search-wrapper">
                <span className="search-icon">üîç</span>
                <input
                  type="text"
                  placeholder="T√¨m ki·∫øm ƒëi·ªÉm ƒë·∫øn..."
                  value={searchTerm}
                  onChange={(e) => setSearchTerm(e.target.value)}
                  className="search-input"
                />
              </div>
            </div>

            <div className="region-filters">
              {Object.entries(regions).map(([key, label]) => (
                <button
                  key={key}
                  onClick={() => setSelectedRegion(key)}
                  className={`filter-button ${selectedRegion === key ? "active" : ""}`}
                >
                  {label}
                  {selectedRegion === key && (
                    <span className="filter-active-indicator"></span>
                  )}
                </button>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Destinations Grid */}
      <section className="destinations-content">
        <div className="container">
          {filteredDestinations.length === 0 ? (
            <div className="no-results">
              <span className="no-results-icon">üîç</span>
              <h3>Kh√¥ng t√¨m th·∫•y ƒëi·ªÉm ƒë·∫øn n√†o</h3>
              <p>H√£y th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn v√πng mi·ªÅn kh√°c</p>
            </div>
          ) : (
            <div className="destinations-grid">
              {filteredDestinations.map((destination, index) => (
                <article
                  key={destination.id}
                  className="destination-card-enhanced fade-in-up"
                  style={{ animationDelay: `${index * 0.1}s` }}
                >
                  <div className="destination-image-container">
                    <img
                      src={`https://images.unsplash.com/photo-${destination.imageId}?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&q=80`}
                      alt={destination.name}
                      loading="lazy"
                      className="destination-image"
                    />
                    <div className="destination-overlay">
                      <div className="destination-region-tag">
                        {destination.region}
                      </div>
                      <div className="destination-quick-actions">
                        <button className="quick-action-btn" title="Y√™u th√≠ch">
                          ‚ù§Ô∏è
                        </button>
                        <button className="quick-action-btn" title="Chia s·∫ª">
                          üì§
                        </button>
                      </div>
                    </div>
                  </div>

                  <div className="destination-content">
                    <div className="destination-header">
                      <h3 className="destination-name">{destination.name}</h3>
                      <div className="destination-rating">
                        <span className="rating-stars">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</span>
                        <span className="rating-text">(4.8)</span>
                      </div>
                    </div>

                    <p className="destination-description">
                      {destination.description}
                    </p>

                    <div className="destination-highlights">
                      <h4 className="highlights-title">üéØ ƒêi·ªÉm n·ªïi b·∫≠t:</h4>
                      <div className="highlights-tags">
                        {destination.highlights
                          .slice(0, 3)
                          .map((highlight, idx) => (
                            <span key={idx} className="highlight-tag">
                              {highlight}
                            </span>
                          ))}
                      </div>
                    </div>

                    <div className="destination-info">
                      <div className="info-item">
                        <span className="info-icon">üå§Ô∏è</span>
                        <span className="info-text">
                          {destination.bestTime}
                        </span>
                      </div>
                      <div className="info-item">
                        <span className="info-icon">üçΩÔ∏è</span>
                        <span className="info-text">
                          {destination.specialties[0]}
                        </span>
                      </div>
                    </div>

                    <div className="destination-actions">
                      <Link
                        to={`/destination/${destination.slug}`}
                        className="explore-btn primary"
                      >
                        <span>Kh√°m ph√° ngay</span>
                        <span className="btn-arrow">‚Üí</span>
                      </Link>
                      <Link
                        to={`/blog?destination=${destination.slug}`}
                        className="explore-btn secondary"
                      >
                        <span>üìñ</span>
                        <span>Xem blog</span>
                      </Link>
                    </div>
                  </div>
                </article>
              ))}
            </div>
          )}
        </div>
      </section>

      {/* CTA Section */}
      <section className="destinations-cta">
        <div className="container">
          <div className="cta-content">
            <h2 className="cta-title">
              B·∫°n c√≥ c√¢u chuy·ªán du l·ªãch hay mu·ªën chia s·∫ª?
            </h2>
            <p className="cta-description">
              H√£y tr·ªü th√†nh m·ªôt ph·∫ßn c·ªßa c·ªông ƒë·ªìng LocalBy v√† chia s·∫ª nh·ªØng tr·∫£i
              nghi·ªám ƒë·ªôc ƒë√°o c·ªßa b·∫°n
            </p>
            <div className="cta-actions">
              <Link to="/contribute" className="cta-button primary">
                <span>‚úç</span>
                Chia s·∫ª c√¢u chuy·ªán
              </Link>
              <Link to="/contact" className="cta-button secondary">
                <span>üí¨</span>
                Li√™n h·ªá v·ªõi ch√∫ng t√¥i
              </Link>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default Destinations;
